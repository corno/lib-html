import { T } from "./datatypes.generated";
import * as g_common from "glo-pareto-common";
export declare namespace ASYNC {
    namespace I { }
    namespace A { }
}
export declare namespace SYNC {
    namespace A {
        namespace F {
            type FromCharacterArray = ($: T.CharacterArray) => g_common.T.String;
        }
        namespace F {
            type Join = ($: T.JoinData) => g_common.T.String;
        }
        namespace F {
            type Length = ($: g_common.T.String) => g_common.T.Number;
        }
        namespace F {
            type ReplaceAll = ($: T.ReplaceAllData) => g_common.T.String;
        }
        namespace F {
            type Split = ($: T.SplitData) => T.SplitResult;
        }
        namespace F {
            type SplitIn2 = ($: T.SplitData) => T.SplitIn2Result;
        }
        namespace F {
            type StartsWith = ($: T.StartsWithData) => g_common.T.Boolean;
        }
        namespace F {
            type Substr = ($: T.SubstrData) => g_common.T.String;
        }
        namespace F {
            type ToCharacterArray = ($: g_common.T.String) => T.CharacterArray;
        }
        namespace F {
            type TrimEnd = ($: g_common.T.String) => g_common.T.String;
        }
    }
}
