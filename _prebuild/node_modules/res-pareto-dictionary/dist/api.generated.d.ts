import * as g_this from "./glossary";
export declare namespace D {
}
export declare namespace A {
    type contains = () => g_this.SYNC.A.F.Contains;
    type filter = () => g_this.SYNC.A.F.Filter;
    type isEmpty = () => g_this.SYNC.A.F.IsEmpty;
    type mergeAndIgnore = ($se: {
        readonly 'error': g_this.ASYNC.I.Error;
    }) => g_this.SYNC.A.F.MergeAndIgnore;
    type mergeAndOverwrite = ($se: {
        readonly 'error': g_this.ASYNC.I.Error;
    }) => g_this.SYNC.A.F.MergeAndOverwrite;
    type mergeDictionaries = () => g_this.SYNC.A.F.MergeDictionaries;
    type unsafeAddEntry = () => g_this.SYNC.A.F.UnsafeAddEntry;
    type unsafeMerge = ($se: {
        readonly 'error': g_this.ASYNC.I.Error;
    }) => g_this.SYNC.A.F.UnsafeMerge;
    type unsafeRekey = () => g_this.SYNC.A.F.UnsafeRekey;
}
export type API = {
    readonly 'contains': A.contains;
    readonly 'filter': A.filter;
    readonly 'isEmpty': A.isEmpty;
    readonly 'mergeAndIgnore': A.mergeAndIgnore;
    readonly 'mergeAndOverwrite': A.mergeAndOverwrite;
    readonly 'mergeDictionaries': A.mergeDictionaries;
    readonly 'unsafeAddEntry': A.unsafeAddEntry;
    readonly 'unsafeMerge': A.unsafeMerge;
    readonly 'unsafeRekey': A.unsafeRekey;
};
