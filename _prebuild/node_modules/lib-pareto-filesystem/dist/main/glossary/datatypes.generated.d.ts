import * as g_fs from "res-pareto-filesystem";
export declare namespace N { }
export declare namespace T {
    namespace ReadOptionalDirectoryData {
        namespace allow {
            type isNotADirectory = boolean;
            type noEntity = boolean;
        }
        type allow = {
            readonly 'isNotADirectory': boolean;
            readonly 'noEntity': boolean;
        };
        type fs = g_fs.T.ReadDirectory_$Data;
    }
    type ReadOptionalDirectoryData = {
        readonly 'allow': {
            readonly 'isNotADirectory': boolean;
            readonly 'noEntity': boolean;
        };
        readonly 'fs': g_fs.T.ReadDirectory_$Data;
    };
    namespace ReadOptionalDirectoryResult {
        type O = g_fs.T.ReadDirectory_$Success;
    }
    type ReadOptionalDirectoryResult = [false] | [true, g_fs.T.ReadDirectory_$Success];
    namespace WriteFileData {
        type data = string;
        type settings = g_fs.T.WriteFileParameters;
    }
    type WriteFileData = {
        readonly 'data': string;
        readonly 'settings': g_fs.T.WriteFileParameters;
    };
}
