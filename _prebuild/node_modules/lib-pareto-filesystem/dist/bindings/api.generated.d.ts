import * as g_common from "glo-pareto-common";
import * as g_main from "../main";
import * as g_this from "./glossary";
export declare namespace D {
}
export declare namespace A {
    type createReadDirectoryOrAbort = ($se: {
        readonly 'onError': g_common.ASYNC.I.String;
    }) => g_main.ASYNC.A.F.ReadDirectoryOrAbort;
    type createReadOptionalDirectory = ($se: {
        readonly 'onError': g_common.ASYNC.I.String;
    }) => g_main.ASYNC.A.F.ReadOptionalDirectory;
    type createUnlinkFireAndForget = () => g_this.ASYNC.A.C.CreateUnlinkFireAndForget;
    type createWriteFileFireAndForget = () => g_this.ASYNC.A.C.CreateWriteFileFireAndForget;
}
export type API = {
    readonly 'createReadDirectoryOrAbort': A.createReadDirectoryOrAbort;
    readonly 'createReadOptionalDirectory': A.createReadOptionalDirectory;
    readonly 'createUnlinkFireAndForget': A.createUnlinkFireAndForget;
    readonly 'createWriteFileFireAndForget': A.createWriteFileFireAndForget;
};
