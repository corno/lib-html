"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$$ = void 0;
const a_2submodules = __importStar(require("../../submodules/2submodules"));
const a_glossary = __importStar(require("lib-pareto-typescript-project"));
const a_fp = __importStar(require("lib-fountain-pen"));
const a_array = __importStar(require("res-pareto-array"));
const map2Glossary_b_1 = require("./map2Glossary.b");
const $$ = () => {
    return a_2submodules.$a.generateSubmodules({
        'createFile': a_fp.$b.createFile(),
        'map2Glossary': (0, map2Glossary_b_1.$$)(),
        'merge': a_array.$r.merge(),
        'serializeGlossary': a_glossary.$b.serializeGlossary(),
    });
};
exports.$$ = $$;
