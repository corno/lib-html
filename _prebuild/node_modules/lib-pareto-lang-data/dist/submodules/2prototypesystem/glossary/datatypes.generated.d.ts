import * as pt from 'pareto-core-types';
import * as g_in from "../../resolved";
export declare namespace N { }
export declare namespace T {
    namespace MapParameters {
        namespace atom__mappings {
            namespace D {
                namespace _lboolean { }
                type _lboolean = null;
                namespace _lnumber { }
                type _lnumber = null;
                namespace _lstring { }
                type _lstring = null;
            }
            type D = ['boolean', null] | ['number', null] | ['string', null];
        }
        type atom__mappings = pt.Dictionary<['boolean', null] | ['number', null] | ['string', null]>;
        type data = g_in.T.Type__Library;
    }
    type MapParameters = {
        readonly 'atom mappings': pt.Dictionary<['boolean', null] | ['number', null] | ['string', null]>;
        readonly 'data': g_in.T.Type__Library;
    };
    namespace SourceLocation {
        type column = number;
        type file = string;
        type line = number;
    }
    type SourceLocation = {
        readonly 'column': number;
        readonly 'file': string;
        readonly 'line': number;
    };
}
