export declare namespace N { }
export declare namespace T {
    namespace Error {
        type annotation<GAnnotation> = GAnnotation;
        namespace message {
            namespace no__such__entry {
                type key<GAnnotation> = string;
            }
            type no__such__entry<GAnnotation> = {
                readonly 'key': string;
            };
            namespace not__the__right__state {
                type expected<GAnnotation> = string;
                type found<GAnnotation> = string;
            }
            type not__the__right__state<GAnnotation> = {
                readonly 'expected': string;
                readonly 'found': string;
            };
        }
        type message<GAnnotation> = [
            'no such entry',
            {
                readonly 'key': string;
            }
        ] | [
            'not the right state',
            {
                readonly 'expected': string;
                readonly 'found': string;
            }
        ];
    }
    type Error<GAnnotation> = {
        readonly 'annotation': GAnnotation;
        readonly 'message': [
            'no such entry',
            {
                readonly 'key': string;
            }
        ] | [
            'not the right state',
            {
                readonly 'expected': string;
                readonly 'found': string;
            }
        ];
    };
}
