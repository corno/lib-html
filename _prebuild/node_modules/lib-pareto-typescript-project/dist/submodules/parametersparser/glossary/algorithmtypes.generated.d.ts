import { T } from "./datatypes.generated";
import * as g_main from "res-pareto-main";
import * as g_parameters from "../../parameters";
export declare namespace ASYNC {
    namespace I {
        type ErrorsHandler = {
            'data': ($: T.ArgumentsError) => void;
            'end': () => void;
        };
        type HandleArguments = {
            'data': ($: g_main.T.Arguments) => void;
            'end': () => void;
        };
        type ParametersHandler = ($: g_parameters.T.Parameters) => void;
    }
    namespace A {
        namespace C {
            type CreateParametersParser = {
                'construct': ($is: {
                    readonly 'errorHandler': ASYNC.I.ErrorsHandler;
                    readonly 'handler': ASYNC.I.ParametersHandler;
                }) => ASYNC.I.HandleArguments;
            };
        }
    }
}
export declare namespace SYNC { }
