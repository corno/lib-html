"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.algorithm = exports.dependent = exports.resource = exports.constructor = exports.afunction = exports.sfunction = exports.procedure = exports.sSideEffect = exports.aSideEffect = exports.data = exports.main = exports.external = exports.sibling = exports.pub = exports.this_ = exports.submodule = exports.tempSubmodule = void 0;
const pd = __importStar(require("pareto-core-data"));
function tempSubmodule($) {
    return ['temp submodule', $];
}
exports.tempSubmodule = tempSubmodule;
function submodule($) {
    return ['submodule', $];
}
exports.submodule = submodule;
function this_() {
    return ['this', null];
}
exports.this_ = this_;
function pub() {
    return ['pub', null];
}
exports.pub = pub;
function sibling($) {
    return ['sibling', $];
}
exports.sibling = sibling;
function external($) {
    return ['external', $];
}
exports.external = external;
function main() {
    return ['main', null];
}
exports.main = main;
function data(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': definition
    };
}
exports.data = data;
function aSideEffect(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': ['asynchronous', {
                'interface': definition,
            }]
    };
}
exports.aSideEffect = aSideEffect;
function sSideEffect(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': ['synchronous', {
                'interface': definition,
            }]
    };
}
exports.sSideEffect = sSideEffect;
function procedure(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': ['synchronous', ['procedure', {
                    'procedure': definition
                }]]
    };
}
exports.procedure = procedure;
function sfunction(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': ['synchronous', ['function', {
                    'function': definition
                }]]
    };
}
exports.sfunction = sfunction;
function afunction(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': ['asynchronous', ['function', {
                    'function': definition
                }]]
    };
}
exports.afunction = afunction;
function constructor(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': ['asynchronous', ['constructor', {
                    'constructor': definition
                }]]
    };
}
exports.constructor = constructor;
function resource(context, args, definition) {
    return {
        'context': {
            'glossary': context,
            'arguments': pd.d(args === undefined ? {} : args)
        },
        'type': ['asynchronous', ['resource', {
                    'resource': definition
                }]]
    };
}
exports.resource = resource;
function dependent(data, deps, se) {
    return ['dependent', {
            'configuration data': data === null
                ? [false]
                : [true, data],
            'dependencies': pd.d(deps),
            'side effects': pd.d(se),
        }];
}
exports.dependent = dependent;
function algorithm(def, params, type) {
    return {
        'definition': def,
        'parameters': pd.d(params === undefined ? {} : params),
        'type': type === undefined
            ? ['independent', null]
            : type,
    };
}
exports.algorithm = algorithm;
