import * as g_foreach from "res-pareto-foreach";
import * as g_this from "./glossary";
import * as g_ts from "res-typescript";
export declare namespace D {
    type serializeGlossary<GAnnotation> = {
        readonly 'createApostrophedString': g_ts.SYNC.A.F.CreateApostrophedString;
        readonly 'createBacktickedString': g_ts.SYNC.A.F.CreateBacktickedString;
        readonly 'createIdentifier': g_ts.SYNC.A.F.CreateIdentifier;
        readonly 'createQuotedString': g_ts.SYNC.A.F.CreateQuotedString;
        readonly 'dictionaryForEach': g_foreach.SYNC.A.P.DictionaryForEach;
        readonly 'enrichedDictionaryForEach': g_foreach.SYNC.A.P.EnrichedDictionaryForEach;
    };
    type serializeImplementation<GAnnotation> = {
        readonly 'createIdentifier': g_ts.SYNC.A.F.CreateIdentifier;
        readonly 'dictionaryForEach': g_foreach.SYNC.A.P.DictionaryForEach;
        readonly 'enrichedDictionaryForEach': g_foreach.SYNC.A.P.EnrichedDictionaryForEach;
    };
    type serializeProject<GAnnotation> = {
        readonly 'createIdentifier': g_ts.SYNC.A.F.CreateIdentifier;
        readonly 'dictionaryForEach': g_foreach.SYNC.A.P.DictionaryForEach;
        readonly 'enrichedDictionaryForEach': g_foreach.SYNC.A.P.EnrichedDictionaryForEach;
        readonly 'serializeGlossary': g_this.SYNC.A.P.SerializeGlossary<GAnnotation>;
        readonly 'serializeImplementation': g_this.SYNC.A.P.SerializeImplementation<GAnnotation>;
    };
    type serializeStates<GAnnotation> = {
        readonly 'createApostrophedString': g_ts.SYNC.A.F.CreateApostrophedString;
        readonly 'createIdentifier': g_ts.SYNC.A.F.CreateIdentifier;
        readonly 'dictionaryForEach': g_foreach.SYNC.A.P.DictionaryForEach;
        readonly 'enrichedDictionaryForEach': g_foreach.SYNC.A.P.EnrichedDictionaryForEach;
    };
}
export declare namespace A {
    type serializeGlossary = <GAnnotation>($d: D.serializeGlossary<GAnnotation>) => g_this.SYNC.A.P.SerializeGlossary<GAnnotation>;
    type serializeImplementation = <GAnnotation>($d: D.serializeImplementation<GAnnotation>) => g_this.SYNC.A.P.SerializeImplementation<GAnnotation>;
    type serializeProject = <GAnnotation>($d: D.serializeProject<GAnnotation>) => g_this.SYNC.A.P.ProjectToDirectory<GAnnotation>;
    type serializeStates = <GAnnotation>($d: D.serializeStates<GAnnotation>) => g_this.SYNC.A.P.SerializeStates<GAnnotation>;
    type validateFiles = <GAnnotation>() => g_this.SYNC.A.F.ValidateFiles<GAnnotation>;
}
export type API = {
    readonly 'serializeGlossary': A.serializeGlossary;
    readonly 'serializeImplementation': A.serializeImplementation;
    readonly 'serializeProject': A.serializeProject;
    readonly 'serializeStates': A.serializeStates;
    readonly 'validateFiles': A.validateFiles;
};
