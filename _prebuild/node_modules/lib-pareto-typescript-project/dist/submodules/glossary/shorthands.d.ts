import * as pd from 'pareto-core-data';
import * as t from "./glossary";
type RawDictionary<T> = {
    [key: string]: T;
};
export declare function null_(): t.T.Type<pd.SourceLocation>;
export declare function boolean(): t.T.Type<pd.SourceLocation>;
export declare function string(): t.T.Type<pd.SourceLocation>;
export declare function number(): t.T.Type<pd.SourceLocation>;
export declare function taggedUnion($: RawDictionary<t.T.Type<pd.SourceLocation>>): t.T.Type<pd.SourceLocation>;
export declare function dictionary($: t.T.Type<pd.SourceLocation>): t.T.Type<pd.SourceLocation>;
export declare function parametrizedType(parameters: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>, type: t.T.Type<pd.SourceLocation>): t.T.Namespace.types.D<pd.SourceLocation>;
export declare function ns(types: RawDictionary<t.T.Namespace.types.D<pd.SourceLocation>>, ns: RawDictionary<t.T.Namespace.namespaces.D<pd.SourceLocation>>): t.T.Namespace<pd.SourceLocation>;
export declare function type(type: t.T.Type<pd.SourceLocation>): t.T.Namespace.types.D<pd.SourceLocation>;
export declare function typeParameter($: string): t.T.DataSpecifier<pd.SourceLocation>;
export declare function glossaryParameter($: string): t.T.DataSpecifier<pd.SourceLocation>;
export declare function array($: t.T.Type<pd.SourceLocation>): t.T.Type<pd.SourceLocation>;
export declare function optional($: t.T.Type<pd.SourceLocation>): t.T.Type<pd.SourceLocation>;
export declare function computed($: t.T.Type<pd.SourceLocation>): t.T.Type<pd.SourceLocation>;
export declare function group($: RawDictionary<t.T.Type.group.D<pd.SourceLocation>>): t.T.Type<pd.SourceLocation>;
export declare function member($: t.T.Type<pd.SourceLocation>): t.T.Type.group.D<pd.SourceLocation>;
export declare function ref(typeReference: t.T.DataSpecifier<pd.SourceLocation>): t.T.Type<pd.SourceLocation>;
export declare function imp(): t.T.Imports.D<pd.SourceLocation>;
export declare function externalTypeReference(contextX: string, type: string, glossArgs?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>, typeArgs?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>): t.T.DataSpecifier<pd.SourceLocation>;
export declare function typeReference(type: string, typeArgs?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>): t.T.DataSpecifier<pd.SourceLocation>;
export declare function sExternalInterfaceReference(contextX: string, inf: string, glossArgs?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>, typeArgs?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>): t.T.SynchronousInterfaceReference<pd.SourceLocation>;
export declare function sInterfaceReference(inf: string, args?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>): t.T.SynchronousInterfaceReference<pd.SourceLocation>;
export declare function aExternalInterfaceReference(contextX: string, inf: string, glossArgs?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>, typeArgs?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>): t.T.AsynchronousInterfaceReference<pd.SourceLocation>;
export declare function aInterfaceReference(inf: string, args?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>): t.T.AsynchronousInterfaceReference<pd.SourceLocation>;
export declare function nothing(): ['nothing', null];
export declare function data($: t.T.DataSpecifier<pd.SourceLocation>): ['data', t.T.DataSpecifier<pd.SourceLocation>];
export declare function sInf($: t.T.SynchronousInterfaceReference<pd.SourceLocation>): ['interface', t.T.SynchronousInterfaceReference<pd.SourceLocation>];
export declare function aInf($: t.T.AsynchronousInterfaceReference<pd.SourceLocation>): ['interface', t.T.AsynchronousInterfaceReference<pd.SourceLocation>];
export declare function aInterface(inf: t.T.AsynchronousInterface<pd.SourceLocation>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.asynchronous.interfaces.D<pd.SourceLocation>;
export declare function sInterface(inf: t.T.Synchronous__Interface<pd.SourceLocation>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.synchronous.interfaces.D<pd.SourceLocation>;
export declare function constructor(inf: t.T.AsynchronousInterfaceReference<pd.SourceLocation>, downstreams: RawDictionary<t.T.AsynchronousInterfaceReference<pd.SourceLocation>>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.asynchronous.algorithms.D<pd.SourceLocation>;
export declare function resource(request: t.T.DataSpecifier<pd.SourceLocation>, consumer: t.T.AsynchronousInterfaceReference<pd.SourceLocation>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.asynchronous.algorithms.D<pd.SourceLocation>;
export declare function afunction(out: t.T.Glossary.asynchronous.algorithms.D._ltype._lfunction.out<pd.SourceLocation>, in_: t.T.Glossary.asynchronous.algorithms.D._ltype._lfunction._lin<pd.SourceLocation>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.asynchronous.algorithms.D<pd.SourceLocation>;
export declare function procedure(in_: t.T.DataOrSynchronousInterface<pd.SourceLocation>, out: t.T.SynchronousInterfaceReference<pd.SourceLocation>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.synchronous.algorithms.D<pd.SourceLocation>;
export declare function scallbackfunction(out: t.T.DataSpecifier<pd.SourceLocation>, in_: t.T.DataOrSynchronousInterface<pd.SourceLocation>, callbacks: RawDictionary<t.T.Glossary.synchronous.algorithms.D._ltype._lfunction.callbacks.D<pd.SourceLocation>>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.synchronous.algorithms.D<pd.SourceLocation>;
export declare function scallback(out: t.T.DataSpecifier<pd.SourceLocation>, in_: t.T.DataSpecifier<pd.SourceLocation>, lookups?: RawDictionary<t.T.DataSpecifier<pd.SourceLocation>>): t.T.Glossary.synchronous.algorithms.D._ltype._lfunction.callbacks.D<pd.SourceLocation>;
export declare function sfunction(out: t.T.DataSpecifier<pd.SourceLocation>, in_: t.T.DataOrSynchronousInterface<pd.SourceLocation>, params?: RawDictionary<t.T.Parameters.D<pd.SourceLocation>>): t.T.Glossary.synchronous.algorithms.D<pd.SourceLocation>;
export declare function sInterfaceMethod(data: null | t.T.DataSpecifier<pd.SourceLocation>, inf?: null | t.T.Synchronous__Interface<pd.SourceLocation>): t.T.Synchronous__Interface<pd.SourceLocation>;
export declare function aInterfaceMethod(data: null | t.T.DataSpecifier<pd.SourceLocation>, inf?: null | t.T.AsynchronousInterface<pd.SourceLocation>): t.T.AsynchronousInterface<pd.SourceLocation>;
export declare function infref($: t.T.AsynchronousInterfaceReference<pd.SourceLocation>): t.T.AsynchronousInterface<pd.SourceLocation>;
export declare function choice(options: RawDictionary<t.T.AsynchronousInterface<pd.SourceLocation>>): t.T.AsynchronousInterface<pd.SourceLocation>;
export declare function streamconsumer(data: t.T.AsynchronousInterface<pd.SourceLocation>, end: t.T.AsynchronousInterface<pd.SourceLocation>): t.T.AsynchronousInterface<pd.SourceLocation>;
export {};
