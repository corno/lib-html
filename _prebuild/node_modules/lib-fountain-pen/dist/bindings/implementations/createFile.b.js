"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$$ = void 0;
const a_fsr = __importStar(require("res-pareto-filesystem"));
const a_fse = __importStar(require("lib-pareto-filesystem/dist/submodules/errormessagecreators"));
const fountainPen_b_1 = require("./fountainPen.b");
const main_1 = require("../../main");
const $$ = () => {
    return ($c, $i) => {
        $c(($, $c) => {
            main_1.$a.createFileCreator({
                'pipeFountainPen': (0, fountainPen_b_1.$$)(),
            })(($b) => {
                $b($, $c);
            }, ($, $c) => {
                //before                    
                const fw = a_fsr.$r.createFileWriter().construct({
                    'onWriteFileError': ($) => {
                        $i.logError(a_fse.$a.writeFile()($.error));
                    },
                })({
                    'path': $.path,
                    'create containing directories': true,
                    'overwrite if exists': $.overwrite,
                });
                //callback
                $c(($) => {
                    fw.data($);
                });
                //after
                fw.end();
            });
        });
    };
};
exports.$$ = $$;
