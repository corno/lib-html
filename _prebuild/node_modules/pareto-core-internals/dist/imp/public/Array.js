"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Array = void 0;
const createCounter_1 = require("../private/createCounter");
const wrapAsyncValueImp_1 = require("./wrapAsyncValueImp");
class Array {
    constructor(data) {
        this.data = data;
    }
    map($v) {
        return new Array(this.data.map((entry) => {
            return $v(entry);
        }));
    }
    asyncMap($v) {
        // const elements = source.map($v)
        // let _isGuaranteedToReturnAResult = true
        // source.forEach(($) => {
        //     if ($)
        // })
        function array(array, $v) {
            const mapped = array.map($v);
            return (0, wrapAsyncValueImp_1.wrapAsyncValueImp)(($c) => {
                const temp = [];
                (0, createCounter_1.createCounter)((counter) => {
                    mapped.forEach((v) => {
                        counter.increment();
                        v.__execute((v) => {
                            temp.push(v);
                            counter.decrement();
                        });
                    });
                }, () => {
                    $c(new Array(temp));
                });
            });
        }
        return array(this.data, $v);
    }
    /////////
    __forEach($i) {
        this.data.forEach(($) => {
            $i($);
        });
    }
    __getLength() {
        return this.data.length;
    }
    __getElementAt(index) {
        return this.data[index];
    }
}
exports.Array = Array;
