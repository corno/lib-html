import * as pd from 'pareto-core-data';
import * as g_this from "./glossary";
type RawDictionary<T> = {
    [key: string]: T;
};
export declare function array(type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function constrainedOptional(constraints: RawDictionary<g_this.T.State__Constraints.dictionary.D<pd.SourceLocation>>, type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function optional(type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function nothing(valSel?: g_this.T.No__Context__Value__Selection<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function prop(type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function dependentProp(siblings: RawDictionary<string>, type: g_this.T.Type<pd.SourceLocation>): g_this.T.Property<pd.SourceLocation>;
export declare function dictionaryReference(type: g_this.T.No__Context__Value__Selection<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function dictionaryConstraint(type: g_this.T.No__Context__Value__Selection<pd.SourceLocation>, dense: boolean): g_this.T.Dictionary__Constraints.dictionary.D<pd.SourceLocation>;
export declare function constrainedDictionary(constraints: RawDictionary<g_this.T.Dictionary__Constraints.dictionary.D<pd.SourceLocation>>, type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function dictionary(type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type<pd.SourceLocation>;
export declare function globalType(parameters: RawDictionary<g_this.T.Parameters.dictionary.D<pd.SourceLocation>>, type: g_this.T.Type<pd.SourceLocation>, result?: g_this.T.Any__Value__Selection<pd.SourceLocation>): g_this.T.Global__Types.dictionary.D<pd.SourceLocation>;
export declare function group(rawProperties: RawDictionary<g_this.T.Type<pd.SourceLocation>>): g_this.T.Type<pd.SourceLocation>;
export declare function state(type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type._ltype.state__group.states.dictionary.D<pd.SourceLocation>;
export declare function stateConstraint(type: g_this.T.No__Context__Value__Selection<pd.SourceLocation>, option: string): g_this.T.State__Constraints.dictionary.D<pd.SourceLocation>;
export declare function constrainedState(constraints: RawDictionary<g_this.T.State__Constraints.dictionary.D<pd.SourceLocation>>, type: g_this.T.Type<pd.SourceLocation>): g_this.T.Type._ltype.state__group.states.dictionary.D<pd.SourceLocation>;
export declare function stateGroup(states: RawDictionary<g_this.T.Type._ltype.state__group.states.dictionary.D<pd.SourceLocation>>): g_this.T.Type<pd.SourceLocation>;
export declare function atom(type: string): g_this.T.Type<pd.SourceLocation>;
export declare function v_grp(prop: string, tail?: g_this.T.Value__Selection__Tail<pd.SourceLocation>): g_this.T.Value__Selection__Tail<pd.SourceLocation>;
export declare function v_sg(type: g_this.T.Global__Type__Selection<pd.SourceLocation>, states: RawDictionary<g_this.T.Value__Selection__Tail.state__group.states.dictionary.D<pd.SourceLocation>>): g_this.T.Value__Selection__Tail<pd.SourceLocation>;
export declare function v_ref(tail?: g_this.T.Value__Selection__Tail<pd.SourceLocation>): g_this.T.Value__Selection__Tail<pd.SourceLocation>;
export declare function valueSelection(variable: string, tail?: g_this.T.Value__Selection__Tail<pd.SourceLocation>): g_this.T.No__Context__Value__Selection<pd.SourceLocation>;
export declare function anyValueSelection(variable: string, tail?: g_this.T.Value__Selection__Tail<pd.SourceLocation>): g_this.T.No__Context__Value__Selection<pd.SourceLocation>;
export declare function fromVariableSelection(variable: string, tail?: g_this.T.Value__Selection__Tail<pd.SourceLocation>): g_this.T.Any__Value__Selection<pd.SourceLocation>;
export declare function fromContextSelection(tail?: g_this.T.Value__Selection__Tail<pd.SourceLocation>): g_this.T.Any__Value__Selection<pd.SourceLocation>;
export declare function aResolvedValue(valueSelection: g_this.T.No__Context__Value__Selection<pd.SourceLocation>): g_this.T.Type._ltype.component.arguments.dictionary.D<pd.SourceLocation>;
export declare function component(type: g_this.T.Global__Type__Selection<pd.SourceLocation>, args: RawDictionary<g_this.T.Type._ltype.component.arguments.dictionary.D<pd.SourceLocation>>): g_this.T.Type<pd.SourceLocation>;
export declare function typeRef(type: string): g_this.T.Global__Type__Selection<pd.SourceLocation>;
export declare function imported(library: string, type: string): g_this.T.Global__Type__Selection<pd.SourceLocation>;
export declare function pResolvedValue(gt: string, optional: boolean): g_this.T.Parameters.dictionary.D<pd.SourceLocation>;
export declare function pExternal(imp: string, gt: string, optional: boolean): g_this.T.Parameters.dictionary.D<pd.SourceLocation>;
export declare function typeLibrary(imports: RawDictionary<g_this.T.Imports.dictionary.D<pd.SourceLocation>>, atom_types: RawDictionary<g_this.T.Atom__Types.dictionary.D<pd.SourceLocation>>, global_types: RawDictionary<g_this.T.Global__Types.dictionary.D<pd.SourceLocation>>): g_this.T.Type__Library<pd.SourceLocation>;
export {};
